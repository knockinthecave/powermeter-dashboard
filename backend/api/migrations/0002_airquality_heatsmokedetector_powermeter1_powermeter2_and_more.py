# Generated by Django 4.2.15 on 2024-09-06 07:11

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("api", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="AirQuality",
            fields=[
                ("idx", models.AutoField(primary_key=True, serialize=False)),
                ("pm10", models.FloatField()),
                ("pm25", models.FloatField()),
                ("co2", models.FloatField()),
                ("temperature", models.FloatField()),
                ("humidity", models.FloatField()),
                ("collection_time", models.DateTimeField()),
            ],
            options={
                "db_table": "AirQuality",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="HeatSmokeDetector",
            fields=[
                ("idx", models.AutoField(primary_key=True, serialize=False)),
                ("temperature", models.FloatField()),
                ("humidity", models.FloatField()),
                ("smoke_level", models.IntegerField()),
                ("collection_time", models.DateTimeField()),
            ],
            options={
                "db_table": "HeatSmokeDetector",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="PowerMeter1",
            fields=[
                ("idx", models.AutoField(primary_key=True, serialize=False)),
                ("effectiveEnergy", models.IntegerField()),
                ("reactiveEnergy", models.IntegerField()),
                ("voltageR", models.FloatField()),
                ("voltageS", models.FloatField()),
                ("voltageT", models.FloatField()),
                ("currentR", models.FloatField()),
                ("currentS", models.FloatField()),
                ("currentT", models.FloatField()),
                ("activePower", models.IntegerField()),
                ("reactivePower", models.IntegerField()),
                ("collection_time", models.DateTimeField()),
            ],
            options={
                "db_table": "PowerMeter1",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="PowerMeter2",
            fields=[
                ("idx", models.AutoField(primary_key=True, serialize=False)),
                ("effectiveEnergy", models.IntegerField()),
                ("reactiveEnergy", models.IntegerField()),
                ("voltageR", models.FloatField()),
                ("voltageS", models.FloatField()),
                ("voltageT", models.FloatField()),
                ("currentR", models.FloatField()),
                ("currentS", models.FloatField()),
                ("currentT", models.FloatField()),
                ("activePower", models.IntegerField()),
                ("reactivePower", models.IntegerField()),
                ("collection_time", models.DateTimeField()),
            ],
            options={
                "db_table": "PowerMeter2",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="PowerMeter3",
            fields=[
                ("idx", models.AutoField(primary_key=True, serialize=False)),
                ("effectiveEnergy", models.IntegerField()),
                ("reactiveEnergy", models.IntegerField()),
                ("voltageR", models.FloatField()),
                ("voltageS", models.FloatField()),
                ("voltageT", models.FloatField()),
                ("currentR", models.FloatField()),
                ("currentS", models.FloatField()),
                ("currentT", models.FloatField()),
                ("activePower", models.IntegerField()),
                ("reactivePower", models.IntegerField()),
                ("collection_time", models.DateTimeField()),
            ],
            options={
                "db_table": "PowerMeter3",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="PowerMeter4",
            fields=[
                ("idx", models.AutoField(primary_key=True, serialize=False)),
                ("effectiveEnergy", models.IntegerField()),
                ("reactiveEnergy", models.IntegerField()),
                ("voltageR", models.FloatField()),
                ("voltageS", models.FloatField()),
                ("voltageT", models.FloatField()),
                ("currentR", models.FloatField()),
                ("currentS", models.FloatField()),
                ("currentT", models.FloatField()),
                ("activePower", models.IntegerField()),
                ("reactivePower", models.IntegerField()),
                ("collection_time", models.DateTimeField()),
            ],
            options={
                "db_table": "PowerMeter4",
                "managed": True,
            },
        ),
        migrations.DeleteModel(
            name="PowerMeter",
        ),
    ]
